{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jerry's stuff\\\\Hackathon\\\\yikers_mane\\\\src\\\\components\\\\graphs4.jsx\";\n//import React, { Component } from 'react';\n//import { ReactComponent } from '*.svg';\nimport React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react'; //var CanvasJSReact = require('./canvasjs.react');\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nlet dataPoints = [];\n\nclass Graphs4 extends Component {\n  render() {\n    const options = {\n      theme: \"dark2\",\n      title: {\n        text: \"Average grade of the class over time\"\n      },\n      axisX: {\n        title: \"Assignment Number\"\n      },\n      axisY: {\n        title: \"Average Grade\"\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: [{\n          label: 1,\n          y: 90\n        }, {\n          label: 2,\n          y: 85\n        }, {\n          label: 3,\n          y: 85\n        }, {\n          label: 4,\n          y: 90\n        }, {\n          label: 5,\n          y: 85\n        }]\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef = {ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Graphs4; // gradeVStudentPS() {\n//     let titleParam = \"Student's Average Grade Over Time\";\n//     let graphTypeParam = \"line\";\n//     let xAxisUnit = \"Assignment\";\n//     let yAxisUnit = \"Average Grade\";\n//     let chart = this.chart;\n//     fetch(\"Our jason file\")\n//         .then(function (response) {\n//             return response.json();\n//         })\n//         .then(function (data) {\n//             for (let i = 0; i < data.classroom.students.assignments.assignmentName.length; i++) {\n//                 dataPoints.push({\n//                     x: data.classroom.students.assignments[i].assignmentName,\n//                     y: data.classroom.students.assignments[i].assignmentGrade\n//                 });\n//             }\n//             chart.render();\n//         });\n// }\n// avgGradeVsAssignment() {\n//     let titleParam = \"Average Grade Per Assignment\";\n//     let graphTypeParam = \"column\";\n//     let xAxisUnit = \"Assignment\";\n//     let yAxisUnit = \"Average Grade\";\n//     let chart = this.chart;\n//     fetch(\"Our jason file\")\n//         .then(function (response) {\n//             return response.json();\n//         })\n//         .then(function (data) {\n//             for (let i = 0; i < data.classroom.students.assignments.length; i++) {\n//                 let avgAssignGrade = 0;\n//                 for (let j = 0; j < data.classroom.students[j].length; i++) {\n//                     avgAssignGrade += data.classroom.students[j].assignements[i].assignmentGrade;\n//                 }\n//                 avgAssignGrade = avgAssignGrade / data.classroom.students.length;\n//                 dataPoints.push({\n//                     x: data.classroom.students.assignments[i].assignmentName,\n//                     y: avgGrade\n//                 });\n//             }\n//             chart.render();\n//         });\n// }\n// avgGradeVsClasses() {\n//     let titleParam = \"Average Grade Per Class\";\n//     let graphTypeParam = \"column\";\n//     let xAxisUnit = \"Class\";\n//     let yAxisUnit = \"Average Grade\";\n//     let chart = this.chart;\n//     fetch(\"Our jason file\")\n//         .then(function (response) {\n//             return response.json();\n//         })\n//         .then(function (data) {\n//             for (let i = 0; i < data.classroom.length; i++) {\n//                 let avgClassGrade = 0;\n//                 for (let j = 0; j < data.classroom[i].students.length; j++) {\n//                     avgClassGrade += data.classroom[i].students[j].averageGrade;\n//                 }\n//                 avgClassGrade = avgClassGrade / data.classroom[i].students;\n//                 dataPoints.push({\n//                     x: data.classroom[i].myClassName,\n//                     y: avgClassGrade\n//                 });\n//             }\n//             chart.render();\n//         });\n// };\n// improtantn\n// let chart = new CanvasJS.Chart(\"chartContainer\", {\n//     animationEnabled: true,\n//     theme: \"light\",\n//     title: {\n//         text: titleParam\n//     },\n//       axisX: {\n//         title: xAxisUnit,\n//     },\n//     axisY: {\n//         title: yAxisUnit,\n//     },\n//     data: [{\n//         type: graphTypeParam,\n//         yValueFormatString: \"#,### Units\",\n//         dataPoints: dataPoints\n//     }]\n// });\n// $.getJSON(/*\"How do i get this file from form.jsx lol?\"*/\"\", addData);\n// function gradeVStudentPS () {\n//     let titleParam = \"Student's Average Grade Over Time\";\n//     let graphTypeParam = \"line\";\n//     let xAxisUnit = \"Assignment\";\n//     let yAxisUnit = \"Average Grade\";\n//     function addData(data) {\n//         for (let i = 0; i < data.classroom.students.assignments.assignmentName.length; i++) {\n//             dataPoints.push({\n//                 x: data.classroom.students.assignments[i].assignmentName,\n//                 y: data.classroom.students.assignments[i].assignmentGrade\n//             });\n//         }\n//         chart.render();\n//     }\n// }\n// function avgGradeVsAssignment () {\n//     let titleParam = \"Average Grade Per Assignment\";\n//     let graphTypeParam = \"column\";\n//     let xAxisUnit = \"Assignment\";\n//     let yAxisUnit = \"Average Grade\";\n//     function addData(data) {\n//         for (let i = 0; i < data.classroom.students.assignments.length; i++) {\n//             let avgAssignGrade = 0;\n//             for(let j = 0; j < data.classroom.students[j].length; i++){\n//                 avgAssignGrade += data.classroom.students[j].assignements[i].assignmentGrade;\n//             }\n//             avgAssignGrade = avgAssignGrade / data.classroom.students.length;\n//             dataPoints.push({\n//                 x: data.classroom.students.assignments[i].assignmentName,\n//                 y: avgGrade\n//             });\n//         }\n//         chart.render();\n//     }\n// }\n// function avgGradeVsClasses () {\n//     let titleParam = \"Average Grade Per Class\";\n//     let graphTypeParam = \"column\";\n//     let xAxisUnit = \"Class\";\n//     let yAxisUnit = \"Average Grade\";\n//     function addData(data) {\n//         for (let i = 0; i < data.classroom.length; i++) {\n//             let avgClassGrade = 0;\n//             for(let j = 0; j < data.classroom[i].students.length; j++) {\n//                 avgClassGrade += data.classroom[i].students[j].averageGrade;\n//             }\n//             avgClassGrade = avgClassGrade / data.classroom[i].students;\n//             dataPoints.push({\n//                 x: data.classroom[i].myClassName,\n//                 y: avgClassGrade\n//             });\n//         }\n//         chart.render();\n//     }\n// }\n// function avgGradeOfAll () {\n//     let titleParam = \"Class' Average Grade Over Time\";\n//     let graphTypeParam = \"line\";\n//     let xAxisUnit = \"Assignment\";\n//     let yAxisUnit = \"Average Grade\";\n//     function addData(data) {\n//         for (let i = 0; i < data.classroom.students.assigments.length; i++) {\n//             let avgClassGrade = 0;\n//             for(let j = 0; j < data.classroom.students.length; i++) {\n//                 avgClassGrade += data.classroom.students.assigments[i].assignmentGrade;\n//             }\n//             avgClassGrade = avgClassGrade / data.classroom.students.length;\n//             dataPoints.push({\n//                 x: data.classroom.students.assigments[i].assignmentName,\n//                 y: avgClassGrade\n//             });\n//         }\n//         chart.render();\n//     }\n// }\n// this function will make the graphs for all of the above functions (just call them lmao)\n// function allGraphs () { \n//     gradeVStudentPS();\n//     avgGradeVsAssignment();\n//     avgGradeVsClasses();\n//     avgGradeOfAll();\n// }","map":{"version":3,"sources":["C:/Jerry's stuff/Hackathon/yikers_mane/src/components/graphs4.jsx"],"names":["React","Component","CanvasJSReact","CanvasJS","CanvasJSChart","dataPoints","Graphs4","render","options","theme","title","text","axisX","axisY","data","type","label","y"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CACA;;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AACA,IAAIC,UAAU,GAAG,EAAjB;;AAGA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAI5BM,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE,OADK;AAEZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE;AADH,OAFK;AAKZC,MAAAA,KAAK,EAAE;AACHF,QAAAA,KAAK,EAAE;AADJ,OALK;AAQZG,MAAAA,KAAK,EAAE;AACHH,QAAAA,KAAK,EAAE;AADJ,OARK;AAWZI,MAAAA,IAAI,EAAE,CAAC;AACHC,QAAAA,IAAI,EAAE,MADH;AAGHV,QAAAA,UAAU,EAAE,CACR;AAAEW,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,CAAC,EAAE;AAAf,SADQ,EAER;AAAED,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,CAAC,EAAE;AAAf,SAFQ,EAGR;AAAED,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,CAAC,EAAE;AAAf,SAHQ,EAIR;AAAED,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,CAAC,EAAE;AAAf,SAJQ,EAKR;AAAED,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,CAAC,EAAE;AAAf,SALQ;AAHT,OAAD;AAXM,KAAhB;AAuBA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAET;AACxB;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAOH;;AAnC2B;;AAsChC,eAAeF,OAAfsourcesContent":["//import React, { Component } from 'react';\r\n//import { ReactComponent } from '*.svg';\r\n\r\nimport React, { Component } from 'react';\r\nimport CanvasJSReact from './canvasjs.react';\r\n//var CanvasJSReact = require('./canvasjs.react');\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\nlet dataPoints = [];\r\n\r\n\r\nclass Graphs4 extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const options = {\r\n            theme: \"dark2\",\r\n            title: {\r\n                text: \"Average grade of the class over time\"\r\n            },\r\n            axisX: {\r\n                title: \"Assignment Number\"\r\n            },\r\n            axisY: {\r\n                title: \"Average Grade\"\r\n            },\r\n            data: [{\r\n                type: \"line\",\r\n\r\n                dataPoints: [\r\n                    { label: 1, y: 90 },\r\n                    { label: 2, y: 85 },\r\n                    { label: 3, y: 85 },\r\n                    { label: 4, y: 90 },\r\n                    { label: 5, y: 85 }\r\n                ]\r\n            }]\r\n        }\r\n        return (\r\n            <div>\r\n                <CanvasJSChart options={options}\r\n                /* onRef = {ref => this.chart = ref} */\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graphs4;\r\n// gradeVStudentPS() {\r\n\r\n//     let titleParam = \"Student's Average Grade Over Time\";\r\n//     let graphTypeParam = \"line\";\r\n//     let xAxisUnit = \"Assignment\";\r\n//     let yAxisUnit = \"Average Grade\";\r\n//     let chart = this.chart;\r\n//     fetch(\"Our jason file\")\r\n//         .then(function (response) {\r\n//             return response.json();\r\n//         })\r\n//         .then(function (data) {\r\n//             for (let i = 0; i < data.classroom.students.assignments.assignmentName.length; i++) {\r\n//                 dataPoints.push({\r\n//                     x: data.classroom.students.assignments[i].assignmentName,\r\n//                     y: data.classroom.students.assignments[i].assignmentGrade\r\n//                 });\r\n//             }\r\n//             chart.render();\r\n//         });\r\n// }\r\n\r\n// avgGradeVsAssignment() {\r\n\r\n//     let titleParam = \"Average Grade Per Assignment\";\r\n//     let graphTypeParam = \"column\";\r\n//     let xAxisUnit = \"Assignment\";\r\n//     let yAxisUnit = \"Average Grade\";\r\n//     let chart = this.chart;\r\n//     fetch(\"Our jason file\")\r\n//         .then(function (response) {\r\n//             return response.json();\r\n//         })\r\n//         .then(function (data) {\r\n\r\n//             for (let i = 0; i < data.classroom.students.assignments.length; i++) {\r\n//                 let avgAssignGrade = 0;\r\n//                 for (let j = 0; j < data.classroom.students[j].length; i++) {\r\n//                     avgAssignGrade += data.classroom.students[j].assignements[i].assignmentGrade;\r\n//                 }\r\n//                 avgAssignGrade = avgAssignGrade / data.classroom.students.length;\r\n//                 dataPoints.push({\r\n//                     x: data.classroom.students.assignments[i].assignmentName,\r\n//                     y: avgGrade\r\n//                 });\r\n//             }\r\n//             chart.render();\r\n//         });\r\n// }\r\n\r\n// avgGradeVsClasses() {\r\n\r\n//     let titleParam = \"Average Grade Per Class\";\r\n//     let graphTypeParam = \"column\";\r\n//     let xAxisUnit = \"Class\";\r\n//     let yAxisUnit = \"Average Grade\";\r\n//     let chart = this.chart;\r\n//     fetch(\"Our jason file\")\r\n//         .then(function (response) {\r\n//             return response.json();\r\n//         })\r\n//         .then(function (data) {\r\n//             for (let i = 0; i < data.classroom.length; i++) {\r\n//                 let avgClassGrade = 0;\r\n//                 for (let j = 0; j < data.classroom[i].students.length; j++) {\r\n//                     avgClassGrade += data.classroom[i].students[j].averageGrade;\r\n//                 }\r\n//                 avgClassGrade = avgClassGrade / data.classroom[i].students;\r\n//                 dataPoints.push({\r\n//                     x: data.classroom[i].myClassName,\r\n//                     y: avgClassGrade\r\n//                 });\r\n//             }\r\n//             chart.render();\r\n//         });\r\n// };\r\n\r\n\r\n// improtantn\r\n// let chart = new CanvasJS.Chart(\"chartContainer\", {\r\n//     animationEnabled: true,\r\n//     theme: \"light\",\r\n//     title: {\r\n//         text: titleParam\r\n//     },\r\n//       axisX: {\r\n//         title: xAxisUnit,\r\n//     },\r\n//     axisY: {\r\n//         title: yAxisUnit,\r\n//     },\r\n//     data: [{\r\n//         type: graphTypeParam,\r\n//         yValueFormatString: \"#,### Units\",\r\n//         dataPoints: dataPoints\r\n//     }]\r\n// });\r\n\r\n// $.getJSON(/*\"How do i get this file from form.jsx lol?\"*/\"\", addData);\r\n\r\n// function gradeVStudentPS () {\r\n\r\n//     let titleParam = \"Student's Average Grade Over Time\";\r\n//     let graphTypeParam = \"line\";\r\n//     let xAxisUnit = \"Assignment\";\r\n//     let yAxisUnit = \"Average Grade\";\r\n//     function addData(data) {\r\n//         for (let i = 0; i < data.classroom.students.assignments.assignmentName.length; i++) {\r\n//             dataPoints.push({\r\n//                 x: data.classroom.students.assignments[i].assignmentName,\r\n//                 y: data.classroom.students.assignments[i].assignmentGrade\r\n//             });\r\n//         }\r\n//         chart.render();\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// function avgGradeVsAssignment () {\r\n\r\n//     let titleParam = \"Average Grade Per Assignment\";\r\n//     let graphTypeParam = \"column\";\r\n//     let xAxisUnit = \"Assignment\";\r\n//     let yAxisUnit = \"Average Grade\";\r\n//     function addData(data) {\r\n//         for (let i = 0; i < data.classroom.students.assignments.length; i++) {\r\n//             let avgAssignGrade = 0;\r\n//             for(let j = 0; j < data.classroom.students[j].length; i++){\r\n//                 avgAssignGrade += data.classroom.students[j].assignements[i].assignmentGrade;\r\n//             }\r\n//             avgAssignGrade = avgAssignGrade / data.classroom.students.length;\r\n//             dataPoints.push({\r\n//                 x: data.classroom.students.assignments[i].assignmentName,\r\n//                 y: avgGrade\r\n//             });\r\n//         }\r\n//         chart.render();\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// function avgGradeVsClasses () {\r\n\r\n//     let titleParam = \"Average Grade Per Class\";\r\n//     let graphTypeParam = \"column\";\r\n//     let xAxisUnit = \"Class\";\r\n//     let yAxisUnit = \"Average Grade\";\r\n//     function addData(data) {\r\n//         for (let i = 0; i < data.classroom.length; i++) {\r\n//             let avgClassGrade = 0;\r\n//             for(let j = 0; j < data.classroom[i].students.length; j++) {\r\n//                 avgClassGrade += data.classroom[i].students[j].averageGrade;\r\n//             }\r\n//             avgClassGrade = avgClassGrade / data.classroom[i].students;\r\n//             dataPoints.push({\r\n//                 x: data.classroom[i].myClassName,\r\n//                 y: avgClassGrade\r\n//             });\r\n//         }\r\n//         chart.render();\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// function avgGradeOfAll () {\r\n\r\n//     let titleParam = \"Class' Average Grade Over Time\";\r\n//     let graphTypeParam = \"line\";\r\n//     let xAxisUnit = \"Assignment\";\r\n//     let yAxisUnit = \"Average Grade\";\r\n//     function addData(data) {\r\n//         for (let i = 0; i < data.classroom.students.assigments.length; i++) {\r\n//             let avgClassGrade = 0;\r\n//             for(let j = 0; j < data.classroom.students.length; i++) {\r\n//                 avgClassGrade += data.classroom.students.assigments[i].assignmentGrade;\r\n//             }\r\n//             avgClassGrade = avgClassGrade / data.classroom.students.length;\r\n//             dataPoints.push({\r\n//                 x: data.classroom.students.assigments[i].assignmentName,\r\n//                 y: avgClassGrade\r\n//             });\r\n//         }\r\n//         chart.render();\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// this function will make the graphs for all of the above functions (just call them lmao)\r\n// function allGraphs () { \r\n\r\n//     gradeVStudentPS();\r\n//     avgGradeVsAssignment();\r\n//     avgGradeVsClasses();\r\n//     avgGradeOfAll();\r\n\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}