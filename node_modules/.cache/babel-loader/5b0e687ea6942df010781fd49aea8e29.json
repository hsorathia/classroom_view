{"ast":null,"code":"var _jsxFileName = \"C:\\\\Habibi\\\\opph23\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst App = props => {\n  // const [dropdownOpen, setOpen] = useState(false);\n  // const toggle = () => setOpen(!dropdownOpen);\n  return React.createElement(UncontrolledButtonDropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Dropdown\"), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    header: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Header\"), React.createElement(DropdownItem, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Action\"), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Another Action\"), React.createElement(DropdownItem, {\n    divider: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Another Action\")));\n};\n\nDropdown.propTypes = {\n  a11y: PropTypes.bool,\n  // defaults to true. Set to false to enable more bootstrap like tabbing behavior\n  disabled: PropTypes.bool,\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  group: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  // For Dropdown usage inside a Nav\n  nav: PropTypes.bool,\n  active: PropTypes.bool,\n  // For Dropdown usage inside a Navbar (disables popper)\n  inNavbar: PropTypes.bool,\n  tag: PropTypes.string,\n  // default: 'div' unless nav=true, then 'li'\n  toggle: PropTypes.func,\n  setActiveFromChild: PropTypes.bool\n};\nDropdownToggle.propTypes = {\n  caret: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  'data-toggle': PropTypes.string,\n  'aria-haspopup': PropTypes.bool,\n  // For DropdownToggle usage inside a Nav\n  nav: PropTypes.bool,\n  // Defaults to Button component\n  tag: PropTypes.any\n};\nDropdownMenu.propTypes = {\n  tag: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  right: PropTypes.bool,\n  flip: PropTypes.bool,\n  // default: true,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  // Custom modifiers that are passed to DropdownMenu.js, see https://popper.js.org/popper-documentation.html#modifiers\n  modifiers: PropTypes.object,\n  persist: PropTypes.bool,\n  // presist the popper, even when closed. See #779 for reasoning\n  // passed to popper, see https://popper.js.org/popper-documentation.html#Popper.Defaults.positionFixed\n  positionFixed: PropTypes.bool\n};\nDropdownItem.propTypes = {\n  children: PropTypes.node,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  divider: PropTypes.bool,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  header: PropTypes.bool,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  toggle: PropTypes.bool // default: true\n\n};\nexport default App;","map":{"version":3,"sources":["C:/Habibi/opph23/src/App.js"],"names":["React","useState","UncontrolledButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","App","props","Dropdown","propTypes","a11y","PropTypes","bool","disabled","direction","oneOf","group","isOpen","nav","active","inNavbar","tag","string","toggle","func","setActiveFromChild","caret","color","className","onClick","any","children","node","isRequired","right","flip","cssModule","object","modifiers","persist","positionFixed","divider","oneOfType","header"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst App = (props) => {\n  // const [dropdownOpen, setOpen] = useState(false);\n\n  // const toggle = () => setOpen(!dropdownOpen);\n\n  return (\n    <UncontrolledButtonDropdown>\n      <DropdownToggle caret>\n        Dropdown\n    </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem header>Header</DropdownItem>\n        <DropdownItem disabled>Action</DropdownItem>\n        <DropdownItem>Another Action</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem>Another Action</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledButtonDropdown>\n  );\n}\n\nDropdown.propTypes = {\n  a11y: PropTypes.bool, // defaults to true. Set to false to enable more bootstrap like tabbing behavior\n  disabled: PropTypes.bool,\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  group: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  // For Dropdown usage inside a Nav\n  nav: PropTypes.bool,\n  active: PropTypes.bool,\n  // For Dropdown usage inside a Navbar (disables popper)\n  inNavbar: PropTypes.bool,\n  tag: PropTypes.string, // default: 'div' unless nav=true, then 'li'\n  toggle: PropTypes.func,\n  setActiveFromChild: PropTypes.bool\n};\n\nDropdownToggle.propTypes = {\n  caret: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  'data-toggle': PropTypes.string,\n  'aria-haspopup': PropTypes.bool,\n  // For DropdownToggle usage inside a Nav\n  nav: PropTypes.bool,\n  // Defaults to Button component\n  tag: PropTypes.any\n};\n\nDropdownMenu.propTypes = {\n  tag: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  right: PropTypes.bool,\n  flip: PropTypes.bool, // default: true,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  // Custom modifiers that are passed to DropdownMenu.js, see https://popper.js.org/popper-documentation.html#modifiers\n  modifiers: PropTypes.object,\n  persist: PropTypes.bool, // presist the popper, even when closed. See #779 for reasoning\n  // passed to popper, see https://popper.js.org/popper-documentation.html#Popper.Defaults.positionFixed\n  positionFixed: PropTypes.bool\n};\n\nDropdownItem.propTypes = {\n  children: PropTypes.node,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  divider: PropTypes.bool,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  header: PropTypes.bool,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  toggle: PropTypes.bool // default: true\n};\nexport default App;"]},"metadata":{},"sourceType":"module"}